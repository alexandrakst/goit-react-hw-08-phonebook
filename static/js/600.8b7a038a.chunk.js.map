{"version":3,"file":"static/js/600.8b7a038a.chunk.js","mappings":"yPAEaA,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHAQhBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mFAMpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qDAKpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wF,SClBpB,SAASO,EAAIC,GAAgB,IAAbC,EAAQD,EAARC,SAC7BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAS,CAAEN,KAAAA,EAAMI,OAAAA,GAEjBG,EAAoB,SAAAC,GACxB,IAAAC,EAAwBD,EAAEE,OAAlBV,EAAIS,EAAJT,KAAMW,EAAKF,EAALE,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,OAEN,EAQMC,EAAQ,WACZX,EAAQ,IACRI,EAAU,GACZ,EAEA,OACEQ,EAAAA,EAAAA,KAAC9B,EAAG,CAAA+B,UACFC,EAAAA,EAAAA,MAAA,QAAMpB,SAbW,SAAAa,GACnBA,EAAEQ,iBACFrB,EAASW,GACTM,GACF,EASiCE,SAAA,EAC3BC,EAAAA,EAAAA,MAAC5B,EAAK,CAAA2B,SAAA,CAAC,QAELD,EAAAA,EAAAA,KAACxB,EAAK,CACJ4B,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,MAAM,OACNC,SAAUZ,EACVa,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZP,EAAAA,EAAAA,MAAC5B,EAAK,CAAA2B,SAAA,CAAC,UAELD,EAAAA,EAAAA,KAACxB,EAAK,CACJ4B,KAAK,MACLjB,KAAK,SACLW,MAAOP,EACPc,MAAM,SACNC,SAAUZ,EACVa,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEVT,EAAAA,EAAAA,KAACtB,EAAM,CAAC0B,KAAK,SAAQH,SAAC,uBAKhC,CCjEO,I,MAAMS,EAAKvC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAIdsC,EAAKxC,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wEAMduC,EAAIzC,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iCAIZK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6FCCnC,EAfoB,SAAHQ,GAAA,IAAMgC,EAAQhC,EAARgC,SAAUC,EAAejC,EAAfiC,gBAAe,OAC9Cd,EAAAA,EAAAA,KAACU,EAAE,CAAAT,SACAY,EAASE,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAI9B,EAAI6B,EAAJ7B,KAAMI,EAAMyB,EAANzB,OAAM,OAC/BW,EAAAA,EAAAA,MAACS,EAAE,CAAAV,SAAA,EACDC,EAAAA,EAAAA,MAACU,EAAC,CAAAX,SAAA,CACCd,EAAK,KAAGI,MAEXS,EAAAA,EAAAA,KAACtB,EAAM,CAAC0B,KAAK,SAASc,QAAS,kBAAMJ,EAAgBG,EAAG,EAAChB,SAAC,aAJnDgB,EAOJ,KAEJ,ECKHE,EAAS,WAGX,IAH0B,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACfJ,EAAK,GACLO,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWP,IAC3CA,KAAQ,CACb,IAAIQ,EAAqB,GAAdJ,EAAMJ,GAEfH,GADEW,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAEV,CACA,OAAOX,CACT,ECjCa/C,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6GAOhBG,EAAQL,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qDCN3B0D,EAAgBZ,IActB,EAZe,SAAHtC,GAAA,IAAMmD,EAAMnD,EAANmD,OAAQC,EAAcpD,EAAdoD,eAAc,OACtC/B,EAAAA,EAAAA,MAAChC,EAAG,CAAA+B,SAAA,EACFD,EAAAA,EAAAA,KAAA,SAAOkC,QAASH,EAAc9B,SAAC,2BAC/BD,EAAAA,EAAAA,KAACxB,EAAK,CACJ4B,KAAK,OACLa,GAAIc,EACJjC,MAAOkC,EACP1B,SAAU2B,MAER,E,UCdKE,EAAc,SAAAC,GAAK,OAAIA,EAAMvB,SAASwB,KAAM,E,UCE5CnE,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6J,8BCWd,SAASiE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACX3B,GAAW4B,EAAAA,EAAAA,IAAYC,GACvBV,GAASS,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMJ,MAAM,KAEhDW,EAAAA,EAAAA,YAAU,WACRJ,EAASK,EAAAA,KACX,GAAG,CAACL,IAEJ,IAwBMM,EAAkBhC,EAASmB,QAAO,SAAAc,GAAO,OAC7CA,EAAQ3D,KAAK4D,cAAcC,SAAShB,EAAOe,cAAc,IAG3D,OACE7C,EAAAA,EAAAA,MAAChC,EAAG,CAAA+B,SAAA,EACFD,EAAAA,EAAAA,KAACiD,EAAAA,EAAI,CAACC,QAAQ,WAAUjD,UACtBD,EAAAA,EAAAA,KAACpB,EAAI,CAACE,SA/Bc,SAAAqE,GACxB,IAAML,GAAOM,EAAAA,EAAAA,GAAA,CACXnC,GAAIE,KACDgC,GAKL,GAFyBtC,EAASwC,MAAK,SAAAC,GAAI,OAAIA,EAAKnE,OAAS2D,EAAQ3D,IAAI,IAGvE,OAAOoE,EAAAA,OAAAA,QAAe,GAADC,OAAIL,EAAKhE,KAAI,4BAGpCoD,EAASK,EAAAA,GAA8BE,GACzC,OAoBI9C,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAACyD,EAAM,CAACzB,OAAQA,EAAQC,eAfP,SAAAtC,GACnB,IAAM+D,EAAc/D,EAAEE,OAAOC,MAC7ByC,GAASoB,EAAAA,EAAAA,IAAUD,GACrB,KAaI1D,EAAAA,EAAAA,KAAC4D,EAAW,CACV/C,SAAUgC,EACV/B,gBAtBkB,SAAAG,GACtBsB,EAASK,EAAAA,GAAiC3B,GAC5C,MAwBF,C,+JC7DO,SAAS4C,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,GAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,SAAvD,I,SCHMC,EAAY,CAAC,YAAa,UAoB1BC,GAAW/F,EAAAA,EAAAA,IAAOgG,EAAAA,EAAO,CAC7BhF,KAAM,UACN2E,KAAM,OACNM,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,GAHlCpG,EAId,WACD,MAAO,CACLqG,SAAU,SAEd,IAsDA,EArD0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAMN,GAAQO,EAAAA,EAAAA,GAAc,CAC1BP,MAAOK,EACPvF,KAAM,YAGJ0F,EAEER,EAFFQ,UAASC,EAEPT,EADFU,OAAAA,OAAM,IAAAD,GAAQA,EAEhBE,GAAQC,EAAAA,EAAAA,GAA8BZ,EAAOJ,GACzCiB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAO,CACrCU,OAAAA,IAEIK,EA/BkB,SAAAF,GACxB,IACEE,EACEF,EADFE,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZd,KAAM,CAAC,SAEoBV,EAAqBuB,EACpD,CAuBkBE,CAAkBJ,GAClC,OAAoBlF,EAAAA,EAAAA,KAAKkE,GAAUiB,EAAAA,EAAAA,GAAS,CAC1CN,WAAWU,EAAAA,EAAAA,GAAKH,EAAQb,KAAMM,GAC9BW,UAAWT,EAAS,OAAIxD,EACxBoD,IAAKA,EACLO,WAAYA,GACXF,GACL,G,iICzCA,EATwB,SAAAQ,GAOtB,QALIA,EAAY,EACD,QAAOC,KAAAC,IAAGF,EAAa,GAEvB,IAAMC,KAAKE,IAAIH,EAAY,GAAK,GAE1B,KAAKI,QAAQ,EACpC,E,8BCPO,SAASC,EAAqB/B,GACnC,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,EAC1C,EACqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,UAAW,WAAY,YAAa,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,gBAAnc,I,SCHMC,EAAY,CAAC,YAAa,YAAa,YAAa,SAAU,WAyB9D6B,GAAY3H,EAAAA,EAAAA,IAAO,MAAO,CAC9BgB,KAAM,WACN2E,KAAM,OACNM,kBAAmB,SAACC,EAAOC,GACzB,IACEY,EACEb,EADFa,WAEF,MAAO,CAACZ,EAAOC,KAAMD,EAAOY,EAAWhC,UAAWgC,EAAWa,QAAUzB,EAAO0B,QAAgC,cAAvBd,EAAWhC,SAA2BoB,EAAO,YAADd,OAAa0B,EAAWM,YAC7J,GARgBrH,EASf,SAAAU,GAGG,IACAoH,EAHJC,EAAKrH,EAALqH,MACAhB,EAAUrG,EAAVqG,WAGA,OAAOC,EAAAA,EAAAA,GAAS,CACdgB,iBAAkBD,EAAME,MAAQF,GAAOG,QAAQC,WAAWC,MAC1DC,OAAQN,EAAME,MAAQF,GAAOG,QAAQI,KAAKC,QAC1CC,WAAYT,EAAMU,YAAYC,OAAO,gBACnC3B,EAAWa,QAAU,CACvBe,aAAcZ,EAAMa,MAAMD,cACF,aAAvB5B,EAAWhC,SAA0B,CACtC8D,OAAQ,aAAFxD,QAAgB0C,EAAME,MAAQF,GAAOG,QAAQY,UAC3B,cAAvB/B,EAAWhC,UAA2BiC,EAAAA,EAAAA,GAAS,CAChD+B,WAAYhB,EAAME,MAAQF,GAAOiB,QAAQjC,EAAWM,aAClDU,EAAME,MAA+B,SAAvBF,EAAMG,QAAQe,MAAmB,CACjDC,gBAAiB,mBAAF7D,QAAqB8D,EAAAA,EAAAA,IAAM,OAAQC,EAAgBrC,EAAWM,YAAW,MAAAhC,QAAK8D,EAAAA,EAAAA,IAAM,OAAQC,EAAgBrC,EAAWM,YAAW,MAChJU,EAAME,MAAQ,CACfiB,gBAAiE,OAA/CpB,EAAuBC,EAAME,KAAKoB,eAAoB,EAASvB,EAAqBf,EAAWM,aAErH,IAuFA,EAtF2Bf,EAAAA,YAAiB,SAAeC,EAASC,GAClE,IAAMN,GAAQO,EAAAA,EAAAA,GAAc,CAC1BP,MAAOK,EACPvF,KAAM,aAGJ0F,EAKER,EALFQ,UAAS4C,EAKPpD,EAJFqD,UAAAA,OAAS,IAAAD,EAAG,MAAKA,EAAAE,EAIftD,EAHFmB,UAAAA,OAAS,IAAAmC,EAAG,EAACA,EAAAC,EAGXvD,EAFF0B,OAAAA,OAAM,IAAA6B,GAAQA,EAAAC,EAEZxD,EADFnB,QAAAA,OAAO,IAAA2E,EAAG,YAAWA,EAEvB7C,GAAQC,EAAAA,EAAAA,GAA8BZ,EAAOJ,GACzCiB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGd,EAAO,CACrCqD,UAAAA,EACAlC,UAAAA,EACAO,OAAAA,EACA7C,QAAAA,IAEIkC,EA7DkB,SAAAF,GACxB,IACEa,EAIEb,EAJFa,OACAP,EAGEN,EAHFM,UACAtC,EAEEgC,EAFFhC,QACAkC,EACEF,EADFE,QAEI0C,EAAQ,CACZvD,KAAM,CAAC,OAAQrB,GAAU6C,GAAU,UAAuB,cAAZ7C,GAA2B,YAAJM,OAAgBgC,KAEvF,OAAOH,EAAAA,EAAAA,GAAeyC,EAAOjC,EAAsBT,EACrD,CAkDkBE,CAAkBJ,GAQlC,OAAoBlF,EAAAA,EAAAA,KAAK8F,GAAWX,EAAAA,EAAAA,GAAS,CAC3C4C,GAAIL,EACJxC,WAAYA,EACZL,WAAWU,EAAAA,EAAAA,GAAKH,EAAQb,KAAMM,GAC9BF,IAAKA,GACJK,GACL,G","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contacts/contactsSelectors.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/styles/getOverlayAlpha.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  border: 2px solid grey;\n  border-radius: 5px;\n  width: 300px;\n  padding: 20px;\n  margin: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  margin: 15px 0 15px 0;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { Label, Input, Div, Button } from './Form.styled';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const fields = { name, number };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(fields);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Div>\n      <form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            label=\"Name\"\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            label=\"Number\"\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button type=\"submit\">Add contact</Button>\n        </Label>\n      </form>\n    </Div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  margin-top: 0;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n`;\n\nexport const P = styled.p`\n  margin-right: 20px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import { Li, Ul, P, Button } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <Ul>\n    {contacts.map(({ id, name, number }) => (\n      <Li key={id}>\n        <P>\n          {name}: {number}\n        </P>\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </Button>\n      </Li>\n    ))}\n  </Ul>\n);\n\nexport default ContactList;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 40px 0 40px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  margin: 20px 0 20px 0;\n`;\n","import { nanoid } from 'nanoid';\nimport { Div, Input } from './Filter.styled';\n\nconst filterInputId = nanoid();\n\nconst Filter = ({ filter, onChangeFilter }) => (\n  <Div>\n    <label htmlFor={filterInputId}>Find contacts by name</label>\n    <Input\n      type=\"text\"\n      id={filterInputId}\n      value={filter}\n      onChange={onChangeFilter}\n    />\n  </Div>\n);\n\nexport default Filter;\n","export const getContacts = state => state.contacts.items;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 30,`;\n","import React, { useEffect } from 'react';\nimport Form from '../../components/Form/Form';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport * as contactsOperations from '../../redux/contacts/contactsOperations';\nimport * as contactsSelectors from '../../redux/contacts/contactsSelectors';\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\nimport { Div } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterReducer';\nimport { Card } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(state => state.filter);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const formSubmitHandler = data => {\n    const contact = {\n      id: nanoid(),\n      ...data,\n    };\n\n    const dublicateContact = contacts.find(item => item.name === contact.name);\n\n    if (dublicateContact) {\n      return Notify.failure(`${data.name} is already in contacts`);\n    }\n\n    dispatch(contactsOperations.addContact(contact));\n  };\n\n  const onDeleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  const changeFilter = e => {\n    const filterValue = e.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <Div>\n      <Card variant=\"outlined\">\n        <Form onSubmit={formSubmitHandler} />\n      </Card>\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChangeFilter={changeFilter} />\n      <ContactList\n        contacts={visibleContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </Div>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","Form","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","fields","handleInputChange","e","_e$target","target","value","reset","_jsx","children","_jsxs","preventDefault","type","label","onChange","pattern","title","required","Ul","Li","P","contacts","onDeleteContact","map","_ref2","id","onClick","nanoid","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","filterInputId","filter","onChangeFilter","htmlFor","getContacts","state","items","Contacts","dispatch","useDispatch","useSelector","contactsSelectors","useEffect","contactsOperations","visibleContacts","contact","toLowerCase","includes","Card","variant","data","_objectSpread","find","item","Notify","concat","Filter","filterValue","setFilter","ContactList","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","_props$raised","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","Math","pow","log","toFixed","getPaperUtilityClass","PaperRoot","square","rounded","_theme$vars$overlays","theme","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","alpha","getOverlayAlpha","overlays","_props$component","component","_props$elevation","_props$square","_props$variant","slots","as"],"sourceRoot":""}